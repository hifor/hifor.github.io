<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hifor</title>
  <icon>https://www.gravatar.com/avatar/76d7d1b3f28d78707ec91d36a4b57080</icon>
  
  <link href="https://www.hifor.net/atom.xml" rel="self"/>
  
  <link href="https://www.hifor.net/"/>
  <updated>2019-09-09T03:49:47.681Z</updated>
  <id>https://www.hifor.net/</id>
  
  <author>
    <name>IKin</name>
    <email>ikin@hifor.net</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>团队博客搭建:hexo+gitlab+jenkins</title>
    <link href="https://www.hifor.net/posts/20190827-adda2db7.html"/>
    <id>https://www.hifor.net/posts/20190827-adda2db7.html</id>
    <published>2019-08-27T09:52:52.000Z</published>
    <updated>2019-09-09T03:49:47.681Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用于团队的知识积累、管理</p></blockquote><p>目前有很多开源博客，但是考虑markdown的优势，以及同样基于markdown的gitbook(我们作为开发文档工具使用)，最后决定选择在程序员中使用最广的个人博客hexo，如果能使用域名配置gitlab page就不需要配置自动化部署，请直接跳过本文，本文使用环境是在内部网络，gitlab page在没域名下是无法使用的。</p><span id="more"></span><!--toc--><p>以下就从编写markdown博客内容到自动化部署流程</p><p><img src="/image/team-blog.svg"></p><h2 id="1-环境说明"><a href="#1-环境说明" class="headerlink" title="1. 环境说明"></a>1. 环境说明</h2><ol><li><p>3台服务器 ubuntu16.04 docker-18.09.1  (用单台多容器或者虚拟机都可以，按实际资源考虑)</p><p>[A]:192.168.4.17 node.js + npm + git + hexo编译构建服务 + nginx博客运行服务  </p><p>[B]:194.0.19.253 gitlab服务器    </p><p>[C]:192.168.4.16 jenkins服务器  </p></li><li><p>node.js v10.16.3</p></li><li><p>npm v6.9.0</p></li><li><p>hexo v2.0.0</p></li><li><p>nginx 1.15.8</p></li><li><p>GitLab 11.8.1-ce</p></li><li><p>Jenkins 2.168</p></li></ol><blockquote><p>以下步骤名称尾部都会标注[A] [B] [C] 对应各自的服务器</p></blockquote><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><h3 id="2-1-Git安装配置-A"><a href="#2-1-Git安装配置-A" class="headerlink" title="2.1 Git安装配置 [A]"></a>2.1 Git安装配置 [A]</h3><ul><li><p>升级,ubuntu16.04 git默认版本2.7.4</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:git-core/ppa</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install git</span><br><span class="line">$ git --version</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-hexo搭建-A"><a href="#2-2-hexo搭建-A" class="headerlink" title="2.2 hexo搭建 [A]"></a>2.2 hexo搭建 [A]</h3><h4 id="2-2-1-nodejs-npm"><a href="#2-2-1-nodejs-npm" class="headerlink" title="2.2.1 nodejs+npm"></a>2.2.1 nodejs+npm</h4><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nodejs</span><br><span class="line">$ sudo apt install nodejs-legacy</span><br><span class="line">$ sudo apt-get install npm</span><br><span class="line">$ sudo npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新node版本</span></span><br><span class="line">$ sudo npm install n -g</span><br><span class="line">$ sudo n stable</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用淘宝镜像</span></span><br><span class="line">$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看安装版本</span></span><br><span class="line">$ sudo node -v</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-2-安装hexo"><a href="#2-2-2-安装hexo" class="headerlink" title="2.2.2 安装hexo"></a>2.2.2 安装hexo</h4><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cnpm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#版本验证</span></span><br><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></li><li><p>初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> ~/hexo &amp;&amp; <span class="built_in">cd</span> ~/hexo</span><br><span class="line">$ sudo hexo init</span><br><span class="line">$ sudo cnpm install</span><br></pre></td></tr></table></figure></li><li><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git发布插件（必须）</span></span><br><span class="line">$ sudo cnpm install hexo-deployer-git --save</span><br><span class="line"><span class="comment">#rss插件</span></span><br><span class="line">$ sudo cnpm install hexo-generator-feed --save</span><br><span class="line"><span class="comment">#永久链接插件</span></span><br><span class="line">$ sudo cnpm install hexo-abbrlink --save</span><br><span class="line"><span class="comment">#目录</span></span><br><span class="line">$ sudo cnpm install hexo-toc --save</span><br><span class="line"><span class="comment">#流程图插件</span></span><br><span class="line">$ sudo cnpm install hexo-filter-mermaid-diagrams --save</span><br><span class="line">$ sudo cnpm install hexo-filter-flowchart --save</span><br><span class="line">$ sudo cnpm install hexo-filter-sequence --save</span><br></pre></td></tr></table></figure></li><li><p>配置权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前用户的UID GID</span></span><br><span class="line">$ <span class="built_in">cat</span> /etc/passwd | grep $(<span class="built_in">whoami</span>)</span><br><span class="line"><span class="comment">#授权</span></span><br><span class="line">$ sudo <span class="built_in">chown</span> -R $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) ~/hexo</span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -g</span><br></pre></td></tr></table></figure><p>访问 <a href="http://192.168.4.17:4000/">http://192.168.4.17:4000</a> 看是否正常显示博客，按ctrl+c停止运行</p></li></ul><h3 id="2-3-安装nginx"><a href="#2-3-安装nginx" class="headerlink" title="2.3 安装nginx"></a>2.3 安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name nginx -p 4000:4000 \</span><br><span class="line">-v /var/www/hexo:/usr/share/nginx/html \</span><br><span class="line">-v /var/local/nginx:/etc/nginx \</span><br><span class="line">-v /var/log/nginx:/var/log/nginx \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-d nginx:1.15.8-alpine</span><br></pre></td></tr></table></figure><h3 id="2-4-Jenkins安装-B"><a href="#2-4-Jenkins安装-B" class="headerlink" title="2.4 Jenkins安装 [B]"></a>2.4 Jenkins安装 [B]</h3><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull jenkins/jenkins:2.168</span><br><span class="line">$ sudo <span class="built_in">mkdir</span> /var/local/jenkins</span><br><span class="line">$ sudo <span class="built_in">chown</span> -R 1000:1000 /var/local/jenkins</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name=jenkins \</span><br><span class="line">-p 81:8080 -p 50000:50000 \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /var/local/jenkins:/var/jenkins_home \</span><br><span class="line">-d jenkins/jenkins:2.168</span><br></pre></td></tr></table></figure></li><li><p>安装后访问系统 <a href="http://192.168.4.16:81/">http://192.168.4.16:81</a> ，从日志中复制填写password，并按引导安装插件，这个密码也是admin管理员的密码,或者在&#x2F;var&#x2F;jenkins_home&#x2F;secrets&#x2F;initialAdminPassword文件中查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker logs jenkins</span><br></pre></td></tr></table></figure><p>注意：一定要安装publish-over-ssh插件，用于SSH连接并发送执行命令</p></li><li><p>设置时区:系统管理-&gt;脚本命令行 执行以下命令即可<br>System.setProperty(‘org.apache.commons.jelly.tags.fmt.timeZone’, ‘Asia&#x2F;Shanghai’)</p></li></ul><h3 id="2-5-GitLab安装-C"><a href="#2-5-GitLab安装-C" class="headerlink" title="2.5 GitLab安装 [C]"></a>2.5 GitLab安装 [C]</h3><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull gitlab/gitlab-ce:11.8.1-ce.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用的都不是常规端口</span></span><br><span class="line">$ docker run --name gitlab \</span><br><span class="line">-p 11443:443 -p 1180:1180 -p 1122:22 \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /var/local/gitlab/config:/etc/gitlab \</span><br><span class="line">-v /var/local/gitlab/logs:/var/log/gitlab \</span><br><span class="line">-v /var/local/gitlab/data:/var/opt/gitlab \</span><br><span class="line">-d gitlab/gitlab-ce:11.8.1-ce.0</span><br></pre></td></tr></table></figure></li><li><p>配置ssh密钥的端口,端口号与映射的宿主机端口号一致；修改时区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab vi /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#如果使用常规端口，端口号就不用修改</span><br><span class="line">gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 1122</span><br><span class="line">external_url &#x27;http://194.0.19.253:1180&#x27;  #你的实际IP</span><br><span class="line">nginx[&#x27;listen_port&#x27;] = 1180</span><br><span class="line">gitlab_rails[&#x27;time_zone&#x27;] = &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure></li><li><p>配置后应用重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab update-permissions</span><br><span class="line">$ docker restart gitlab</span><br></pre></td></tr></table></figure></li><li><p>访问gitlab,第一次需要设置root密码，然后创建用户，再新建一个仓库本地拉取测试是否安装成功</p><p><a href="http://194.0.19.253:1180/">http://194.0.19.253:1180</a></p></li></ul><h2 id="3-自动化部署配置"><a href="#3-自动化部署配置" class="headerlink" title="3.自动化部署配置"></a>3.自动化部署配置</h2><blockquote><p>在服务器A配置: node.js + npm + git + hexo编译构建服务 + nginx博客运行服务 </p></blockquote><h3 id="3-1-创建仓库-C"><a href="#3-1-创建仓库-C" class="headerlink" title="3.1 创建仓库 [C]"></a>3.1 创建仓库 [C]</h3><ul><li><p>在gitlab上创建2个仓库，一个用于存放博客内容，一个用于存放hexo编译后的发布文件</p><p>注意：在创建blog-deploy的时候不要勾选 <strong>Initialize repository with a README</strong> ，不然后面发布会报错</p></li></ul><p><img src="/image/1566871969759.png"></p><h3 id="3-2-配置ssh-key-A"><a href="#3-2-配置ssh-key-A" class="headerlink" title="3.2 配置ssh key [A]"></a>3.2 配置ssh key [A]</h3><ul><li><p>查看本机是否已有ssh key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ <span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>生成 ssh key id_rsa.pub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;ikin@hifor.net&quot;</span>  <span class="comment">#会提示输入密码，这里不要使用密码，都是按回车</span></span><br><span class="line"><span class="comment"># 查看公钥</span></span><br><span class="line">$ <span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>打开gitlab,配置公钥</p><p><a href="http://194.0.19.253:1180/">http://194.0.19.253:1180</a></p><p><img src="/image/1566871290004.png"></p></li></ul><h3 id="3-3-配置GIT-A"><a href="#3-3-配置GIT-A" class="headerlink" title="3.3 配置GIT  [A]"></a>3.3 配置GIT  [A]</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email <span class="string">&quot;你的gitlab邮箱&quot;</span></span><br><span class="line">$ git config --global user.name <span class="string">&quot;你的gitlab用户名&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-克隆仓库-A"><a href="#3-4-克隆仓库-A" class="headerlink" title="3.4 克隆仓库  [A]"></a>3.4 克隆仓库  [A]</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除hexo初始博客文件</span></span><br><span class="line">$ <span class="built_in">mkdir</span> ~/hexo/tmp &amp;&amp; <span class="built_in">mv</span> ~/hexo/source/* ~/hexo/tmp/</span><br><span class="line"><span class="comment">#拉取</span></span><br><span class="line">$ git <span class="built_in">clone</span> ssh://git@194.0.19.253:1122/java/blog.git ~/hexo/source/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-5-配置hexo并推送gitlab-A"><a href="#3-5-配置hexo并推送gitlab-A" class="headerlink" title="3.5 配置hexo并推送gitlab [A]"></a>3.5 配置hexo并推送gitlab [A]</h3><ul><li><p>配置_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/hexo/_config.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Site  博客信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">TEC开发中心</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">知无穷尽,行无止境</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">ikin</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#URL </span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://192.168.4.17:4000</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:year:month:day-:abbrlink.html</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Home page setting</span></span><br><span class="line"><span class="comment">#path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment">#per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment">#order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment">#support dec(default) and he</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mermaid chart</span></span><br><span class="line"><span class="attr">mermaid:</span> <span class="comment">## mermaid url https://github.com/knsv/mermaid</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># default true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">&quot;8.2.6&quot;</span></span><br><span class="line">  <span class="attr">options:</span>  <span class="comment"># find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span></span><br><span class="line">  <span class="comment">#startOnload: true  // default true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">ssh://git@194.0.19.253:1122/java/blog-deploy.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>修改主题支持mermaid</p><p>下载:<a href="https://unpkg.com/mermaid@8.2.6/dist/mermaid.min.js">https://unpkg.com/mermaid@8.2.6/dist/mermaid.min.js</a> 保存到 themes&#x2F;landscape&#x2F;source&#x2F;js&#x2F;</p><p>在文件: themes&#x2F;landscape&#x2F;layout_partial&#x2F;after-footer.ejs  底部加入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.mermaid.enable)&#123; %&gt;</span><br><span class="line">  &lt;%- js(&#x27;js/mermaid.min&#x27;) %&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;theme: &#x27;forest&#x27;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li><p>发布 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li></ul><p><img src="/image/1566891131748.png"></p><h3 id="3-6-配置nginx并发布博客-A"><a href="#3-6-配置nginx并发布博客-A" class="headerlink" title="3.6 配置nginx并发布博客  [A]"></a>3.6 配置nginx并发布博客  [A]</h3><ul><li><p>配置nginx</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /var/local/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>  在底部加入：include defined&#x2F;*.conf;</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">mkdir</span> /var/local/nginx/defined</span><br><span class="line">$ sudo vi /var/local/nginx/defined/ip.conf</span><br></pre></td></tr></table></figure><p>  配置hexo的运行路径</p>  <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">4000</span>; <span class="comment">#这是容器内的端口</span></span><br><span class="line">  <span class="attribute">server_name</span> localhost;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">access_log</span>  /var/log/nginx/ip.access.log;</span><br><span class="line">  <span class="attribute">error_log</span>  /var/log/nginx/ip.<span class="literal">error</span>.log;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="attribute">root</span>   /usr/share/nginx/html; <span class="comment">#这是容器内的路径</span></span><br><span class="line">      <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  检查配置是否正常</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it nginx nginx -t -c /etc/nginx/nginx.conf</span><br><span class="line"><span class="comment">#重启生效</span></span><br><span class="line">$ docker restart nginx</span><br></pre></td></tr></table></figure></li><li><p>克隆blog-delpoy</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">chown</span> -R 1000:1000 /var/www/hexo/</span><br><span class="line">$ git <span class="built_in">clone</span> ssh://git@194.0.19.253:1122/java/blog-deploy.git /var/www/hexo/</span><br></pre></td></tr></table></figure><p>  这时候可以正常访问nginx的博客：<a href="http://192.168.4.17:4000/">http://192.168.4.17:4000/</a></p></li></ul><h3 id="3-7-配置Jenkins-B"><a href="#3-7-配置Jenkins-B" class="headerlink" title="3.7 配置Jenkins  [B]"></a>3.7 配置Jenkins  [B]</h3><ul><li><p>配置免密SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it jenkins bash</span><br><span class="line">$ ssh-keygen <span class="comment">#一直回车即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#上传公钥到服务器A</span></span><br><span class="line">$ ssh-copy-id -i ~/.ssh/id_rsa.pub ikin@192.168.4.17</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试免密登录</span></span><br><span class="line">$ ssh ikin@192.168.4.17</span><br><span class="line">$ <span class="built_in">exit</span> <span class="comment">#回到容器</span></span><br><span class="line">$ <span class="built_in">exit</span> <span class="comment">#回到宿主机</span></span><br></pre></td></tr></table></figure></li><li><p>打开Jenkins并登录，配置<strong>Publish over SSH</strong> ：系统管理-&gt;系统设置 最下面</p><p><img src="/image/adda2db7-1567048484362.png"></p></li><li><p>去掉防止跨站点请求伪造</p><p>设置-&gt;全局安全配置</p><p>CSRF Protection<br>去掉勾选<strong>Prevent Cross Site Request Forgery exploits</strong></p></li><li><p>新建任务</p></li></ul><p><img src="/image/1566894616673.png"></p><ul><li>配置 Build Triggers</li></ul><p><img src="/image/1566894775962.png"></p><ul><li><p>Build添加ssh远程执行命令</p><p>  <img src="/image/adda2db7-1567042598162.png"></p><blockquote><p>如果没有”Send files or execute commands over SSH”选项，需要先安装publish-over-ssh 插件并配置</p></blockquote><ol><li><p>拉取最新blog仓库内容并编译发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/hexo/source/ \</span><br><span class="line">&amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull \</span><br><span class="line">&amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure></li></ol></li></ul><p><img src="/image/adda2db7-1567042749915.png"></p><ol start="2"><li><p>拉取最新blog-deploy仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/hexo/ &amp;&amp; git pull</span><br></pre></td></tr></table></figure></li></ol><p><img src="/image/adda2db7-1567049444531.png"></p><h3 id="3-8-配置gitlab-webhook-C"><a href="#3-8-配置gitlab-webhook-C" class="headerlink" title="3.8 配置gitlab webhook  [C]"></a>3.8 配置gitlab webhook  [C]</h3><blockquote><p>在blog仓库配置webhook,只要有新的提交就触发jenkins任务</p></blockquote><p><img src="/image/1566898833283.png"></p><p>这里的1681是gitlab到jenkins的转发端口，大家按原来的81就可以</p><h2 id="4-编写发布博客-成员PC"><a href="#4-编写发布博客-成员PC" class="headerlink" title="4. 编写发布博客(成员PC)"></a>4. 编写发布博客(成员PC)</h2><h3 id="4-1-克隆仓库"><a href="#4-1-克隆仓库" class="headerlink" title="4.1 克隆仓库"></a>4.1 克隆仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> ssh://git@194.0.19.253:1122/java/blog.git</span><br></pre></td></tr></table></figure><h3 id="4-2-使用Typora编写博客"><a href="#4-2-使用Typora编写博客" class="headerlink" title="4.2 使用Typora编写博客"></a>4.2 使用Typora编写博客</h3><p><img src="/image/adda2db7-1567039362693.png"></p><h3 id="4-3-提交并推送到远程仓库"><a href="#4-3-提交并推送到远程仓库" class="headerlink" title="4.3 提交并推送到远程仓库"></a>4.3 提交并推送到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add -A</span><br><span class="line">$ git commit -m <span class="string">&quot;测试&quot;</span></span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>可以打开jenkins查看是否成功触发自动化部署</p><p><img src="/image/adda2db7-1567050339073.png"></p><p><img src="/image/adda2db7-1567050177110.png"></p><p>访问 <a href="http://192.168.4.17:4000/">http://192.168.4.17:4000</a> 查看已经自动发布的博客</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>实际原理就是通过hexo把markdown文件生成静态html页面，然后在nginx下运行，团队的每个成员只要专注于博客的内容编写，不用管博客编译、发布。</p><p>如果在github上也有个人博客，只要复制md文件通过hexo或jekyll编译发布到自己的github上即可，甚至可以同时发布到其他支持markdown的平台(简书、微信公众号等)，一次编写到处发布。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;用于团队的知识积累、管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前有很多开源博客，但是考虑markdown的优势，以及同样基于markdown的gitbook(我们作为开发文档工具使用)，最后决定选择在程序员中使用最广的个人博客hexo，如果能使用域名配置gitlab page就不需要配置自动化部署，请直接跳过本文，本文使用环境是在内部网络，gitlab page在没域名下是无法使用的。&lt;/p&gt;</summary>
    
    
    
    <category term="blog" scheme="https://www.hifor.net/categories/blog/"/>
    
    
    <category term="gitlab" scheme="https://www.hifor.net/tags/gitlab/"/>
    
    <category term="blog" scheme="https://www.hifor.net/tags/blog/"/>
    
    <category term="nginx" scheme="https://www.hifor.net/tags/nginx/"/>
    
    <category term="hexo" scheme="https://www.hifor.net/tags/hexo/"/>
    
    <category term="jenkins" scheme="https://www.hifor.net/tags/jenkins/"/>
    
    <category term="docker" scheme="https://www.hifor.net/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>一行代码让系统崩溃</title>
    <link href="https://www.hifor.net/posts/20170305-fcc529ed.html"/>
    <id>https://www.hifor.net/posts/20170305-fcc529ed.html</id>
    <published>2017-03-05T09:01:15.000Z</published>
    <updated>2019-08-23T03:06:20.374Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/article_banner_20170305001.png"><br>一直忙于带开发团队，在带新人过程中踩的那些奇葩的坑，打算近期有时间会一一整理出来。<br>要先吐槽的是这“崩溃”级别的坑，这是2016年国庆期间默默加班补的，印象相当深刻！！！</p><span id="more"></span><p>那是在2016国庆前期，即将放假，还有好多工作，我的内心其实是拒(ji)绝(dong)的。</p><p>那时交给开发成员一个发送短信功能的任务，短信机的服务商有提供java api调用的demo，成员效率相当高，当天就提交了代码，照常测试赶在节前最后一天发布上线。<br>可是很快就悲剧了，系统总是莫名奇妙的奔溃，每次都得重启才能解决。<br>更难搞的是完全找不到崩溃规律，一不开心就宕。<br>检查服务器，正常 。<br>检查日志，没有任何异常信息。<br>顿时懵圈……<br>实在没办法了，版本回滚，滚，滚~<br>然后就风平浪静了，系统安安静静的跑着，柔顺、丝滑。</p><p>这不科学！<br>做开发的都有死磕精神，使用超级笨办法，版本比较，苦逼的一行一行嗑代码。<br>当我发现**System.exit(-1);**代码的时候,看过《唐伯虎点秋香》对穿肠飙血的场景吗？当时我就那状态。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (connectRe != APIClient.IMAPI_SUCC) &#123;</span><br><span class="line">    usage();</span><br><span class="line">    System.exit(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的意思是:只要连接失败就终止JVM<del>终止JVM</del>终止JVM！！！</p><p>后来向成员了解后才知道，他是照搬api调用的demo代码，完全不理解代码意思，这怪我咯~</p><p><strong>我不生产代码，我只是代码的搬运工</strong>，对于这种开发人员，我只想说三个字:<strong>拍死</strong>!!!</p>]]></content>
    
    
    <summary type="html">一行代码 系统崩溃</summary>
    
    
    
    <category term="java" scheme="https://www.hifor.net/categories/java/"/>
    
    
    <category term="java" scheme="https://www.hifor.net/tags/java/"/>
    
    <category term="bug" scheme="https://www.hifor.net/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>FastJson序列化和反序列化</title>
    <link href="https://www.hifor.net/posts/20150927-a5c0330a.html"/>
    <id>https://www.hifor.net/posts/20150927-a5c0330a.html</id>
    <published>2015-09-27T08:43:15.000Z</published>
    <updated>2019-08-23T03:06:17.534Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/article_banner_20150927001.png"><br>fastjson 是一个性能很好的 Java 语言实现的 JSON 解析器和生成器，来自阿里巴巴的工程师开发。<br>官方下载地址<a href="https://github.com/alibaba/fastjson">https://github.com/alibaba/fastjson</a></p><span id="more"></span><h3 id="主要特点："><a href="#主要特点：" class="headerlink" title="主要特点："></a>主要特点：</h3><h4 id="1-快速FAST-比其它任何基于Java的解析器和生成器更快，包括jackson）"><a href="#1-快速FAST-比其它任何基于Java的解析器和生成器更快，包括jackson）" class="headerlink" title="1.快速FAST (比其它任何基于Java的解析器和生成器更快，包括jackson）"></a>1.快速FAST (比其它任何基于Java的解析器和生成器更快，包括jackson）</h4><h4 id="2-强大（支持普通JDK类包括任意Java-Bean-Class、Collection、Map、Date或enum）"><a href="#2-强大（支持普通JDK类包括任意Java-Bean-Class、Collection、Map、Date或enum）" class="headerlink" title="2.强大（支持普通JDK类包括任意Java Bean Class、Collection、Map、Date或enum）"></a>2.强大（支持普通JDK类包括任意Java Bean Class、Collection、Map、Date或enum）</h4><h4 id="3-零依赖（没有依赖其它任何类库除了JDK）"><a href="#3-零依赖（没有依赖其它任何类库除了JDK）" class="headerlink" title="3.零依赖（没有依赖其它任何类库除了JDK）"></a>3.零依赖（没有依赖其它任何类库除了JDK）</h4><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><h4 id="1-实体类"><a href="#1-实体类" class="headerlink" title="1.实体类"></a>1.实体类</h4><h5 id="普通实体类-User-java"><a href="#普通实体类-User-java" class="headerlink" title="普通实体类 User.java"></a>普通实体类 User.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.hifor.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String userid;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span>[] departments;</span><br><span class="line">  <span class="keyword">private</span> String position;</span><br><span class="line">  <span class="keyword">private</span> String mobile;</span><br><span class="line">  <span class="keyword">private</span> String gender;</span><br><span class="line">  <span class="keyword">private</span> String email;</span><br><span class="line">  <span class="keyword">private</span> String weixinid;</span><br><span class="line">  <span class="keyword">private</span> String avatar_mediaid;</span><br><span class="line">  <span class="keyword">private</span> String extattr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserid</span><span class="params">(String userid)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.userid = userid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getUserid</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.userid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span>[] getDepartments() &#123;</span><br><span class="line">    <span class="keyword">return</span> departments;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDepartments</span><span class="params">(<span class="type">int</span>[] departments)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.departments = departments;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPosition</span><span class="params">(String position)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.position = position;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getPosition</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.position;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMobile</span><span class="params">(String mobile)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.mobile = mobile;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getMobile</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.mobile;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.gender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.email = email;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.email;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWeixinid</span><span class="params">(String weixinid)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.weixinid = weixinid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getWeixinid</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.weixinid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAvatar_mediaid</span><span class="params">(String avatar_mediaid)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.avatar_mediaid = avatar_mediaid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getAvatar_mediaid</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.avatar_mediaid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setExtattr</span><span class="params">(String extattr)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.extattr = extattr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getExtattr</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.extattr;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="泛型类-Result-java"><a href="#泛型类-Result-java" class="headerlink" title="泛型类 Result.java"></a>泛型类 Result.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.hifor.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String errorcode;</span><br><span class="line">  <span class="keyword">private</span> String errormes;</span><br><span class="line">  <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getErrorcode</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> errorcode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setErrorcode</span><span class="params">(String errorcode)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.errorcode = errorcode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getErrormes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> errormes;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setErrormes</span><span class="params">(String errormes)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.errormes = errormes;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(T data)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.data = data;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-使用FastJson解析JSON"><a href="#2-使用FastJson解析JSON" class="headerlink" title="2.使用FastJson解析JSON"></a>2.使用FastJson解析JSON</h4><h5 id="序列化-并格式化JSON字符串"><a href="#序列化-并格式化JSON字符串" class="headerlink" title="序列化,并格式化JSON字符串"></a>序列化,并格式化JSON字符串</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化对象</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setUserid(<span class="string">&quot;1001001&quot;</span>);</span><br><span class="line">user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">user.setDepartments(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;);</span><br><span class="line">user.setPosition(<span class="string">&quot;产品经理&quot;</span>);</span><br><span class="line">user.setMobile(<span class="string">&quot;15913215421&quot;</span>);</span><br><span class="line">user.setGender(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;zhangsan@gzdev.com&quot;</span>);</span><br><span class="line">user.setWeixinid(<span class="string">&quot;zhangsan4dev&quot;</span>);</span><br><span class="line">user.setAvatar_mediaid(<span class="string">&quot;2-G6nrLmr5EC3MNb_-zL1dDdzkd0p7cNliYu9V5w7o8K0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//对象序列化</span></span><br><span class="line"><span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span>  JSONObject.toJSONString(user);</span><br><span class="line"><span class="comment">//对象序列化并格式化</span></span><br><span class="line">System.out.println(JSONObject.toJSONString(user, <span class="literal">true</span>));</span><br></pre></td></tr></table></figure><h5 id="反序列化普通对象"><a href="#反序列化普通对象" class="headerlink" title="反序列化普通对象,"></a>反序列化普通对象,</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通对象反序列化</span></span><br><span class="line"><span class="type">User</span> <span class="variable">deserializableUser</span> <span class="operator">=</span> JSONObject.parseObject(json, User.class);</span><br><span class="line">System.out.println(<span class="string">&quot;姓名：&quot;</span> + deserializableUser.getName());</span><br></pre></td></tr></table></figure><h5 id="反序列化泛型对象-针对泛型类型-需要使用TypeReference进行解析"><a href="#反序列化泛型对象-针对泛型类型-需要使用TypeReference进行解析" class="headerlink" title="反序列化泛型对象,针对泛型类型,需要使用TypeReference进行解析"></a>反序列化泛型对象,针对泛型类型,需要使用TypeReference进行解析</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">json = <span class="string">&quot;&#123;\&quot;errorcode\&quot;:\&quot;0\&quot;,\&quot;errormes\&quot;:\&quot;ok\&quot;,\&quot;data\&quot;:&quot;</span>+json+<span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line"><span class="comment">//泛型对象反序列化</span></span><br><span class="line">Result&lt;User&gt; result = JSONObject.parseObject(json, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Result&lt;User&gt;&gt;()&#123;&#125;);</span><br><span class="line">System.out.println(<span class="string">&quot;手机：&quot;</span> + result.getData().getMobile());</span><br><span class="line">System.out.println(JSONObject.toJSONString(result, <span class="literal">true</span>));</span><br></pre></td></tr></table></figure><p>原文地址:<a href="http://hifor.net/posts/20150927-a5c0330a.html">http://hifor.net/posts/20150927-a5c0330a.html</a></p>]]></content>
    
    
    <summary type="html">FastJson序列化和反序列化 JSON解析 泛型反序列化</summary>
    
    
    
    <category term="java" scheme="https://www.hifor.net/categories/java/"/>
    
    
    <category term="java" scheme="https://www.hifor.net/tags/java/"/>
    
    <category term="json" scheme="https://www.hifor.net/tags/json/"/>
    
    <category term="fastjson" scheme="https://www.hifor.net/tags/fastjson/"/>
    
  </entry>
  
  <entry>
    <title>log4j2配置</title>
    <link href="https://www.hifor.net/posts/20150926-304680b6.html"/>
    <id>https://www.hifor.net/posts/20150926-304680b6.html</id>
    <published>2015-09-26T15:44:36.000Z</published>
    <updated>2019-08-23T03:06:19.110Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/article_banner_20150926002.png"><br>log4j 2的配置(输出日志到WEB项目目录、不同级别日志保存不同文件、日志压缩等)</p><span id="more"></span><p>官方下载地址<a href="http://logging.apache.org/log4j/2.x/download.html">http://logging.apache.org/log4j/2.x/download.html</a><br>官方配置说明<a href="http://logging.apache.org/log4j/2.x/manual/configuration.html#SystemProperties">http://logging.apache.org/log4j/2.x/manual/configuration.html#SystemProperties</a></p><p><del>log4j 2版本已经不支持properties类型的配置文件了</del></p><p>Log4j 2.3是最后支持JAVA 6的版本,log4j组件2.4以后的版本已经能够支持.properties格式的配置文件（之前的2.x版均不支持.properties配置）,默认配置文件名称及优先级如下(配置文件路径要放在classpath下)：</p><table><thead><tr><th align="center">优先级</th><th align="center">文件类型</th><th align="left">文件名</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">properties</td><td align="left">log4j2-test.properties</td></tr><tr><td align="center">2</td><td align="center">YAML</td><td align="left">log4j2-test.yaml log4j2-test.yml</td></tr><tr><td align="center">3</td><td align="center">JSON</td><td align="left">log4j2-test.json log4j2-test.jsn</td></tr><tr><td align="center">4</td><td align="center">XML</td><td align="left">log4j2-test.xml</td></tr><tr><td align="center">5</td><td align="center">properties</td><td align="left">log4j2.properties</td></tr><tr><td align="center">6</td><td align="center">YAML</td><td align="left">log4j2.yaml log4j2.yml</td></tr><tr><td align="center">7</td><td align="center">JSON</td><td align="left">log4j2.json log4j2.jsn</td></tr><tr><td align="center">8</td><td align="center">XML</td><td align="left">log4j2.xml</td></tr></tbody></table><p>在没有任何配置的情况下，log4j2会使用默认配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该配置只有一个Appender：Console，目标是SYSTEM_OUT，即日志内容，都会打印在控制台上。Root Logger的级别是error，即：所有error及以上级别的日志才会记录。<br>(注：日志级别顺序为 TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL )，所以最终只有2日志会输出(error,fatal)<br>配置第1行中的status&#x3D;”WARN”，可以去掉，它的含义为是否记录log4j2本身的event信息，默认是OFF，设置成“WARN”指：所有log4j2的event信息中，只有WARN及以上级别的信息才记录，大家可以把它改成TRACE试试(最低级别)，看下输出内容有何变化。</p><p>再讲下如何把不同级别的日志，输出到不同的日志文件中以及文件大小限制及压缩。这个在网上，包括官网上，都没有一个是说清楚的。<br>比如，希望trace&#x2F;debug级别的日志输出到debug.log，而info级别的日志输出到info.log，其他如warn&#x2F;error&#x2F;fatal级别的日志都输出到error.log，这样分开输出是有好处的。我们按照如下的log42j.xml的配置，即可实现这样的输出。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- status=&quot;OFF&quot;，可以去掉，它的含义为是否记录log4j2本身的event信息，默认是OFF --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">&quot;OFF&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 定义下面的引用名 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log_pattern&quot;</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss z&#125; %-5level %class&#123;36&#125;%L%M - %msg%xEx%n<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log-path&quot;</span>&gt;</span>$&#123;web:rootDir&#125;/logs<span class="tag">&lt;/<span class="name">property</span>&gt;</span><span class="comment">&lt;!-- $&#123;web:rootDir&#125;是项目根目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;every_file_size&quot;</span>&gt;</span>5M<span class="tag">&lt;/<span class="name">property</span>&gt;</span><span class="comment">&lt;!-- 日志切割的最小单位 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;output_log_level&quot;</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">property</span>&gt;</span><span class="comment">&lt;!-- 日志输出级别 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--先定义所有的appender --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--这个输出控制台的配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span> /&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--这个都知道是输出日志的格式 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- debug级别日志文件 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--每次大小超过size，则这size大小的日志会自动进行压缩，作为存档 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;app_debug&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log-path&#125;/debug/debug.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log-path&#125;/debug/debug-%d&#123;yyyy-MM-dd&#125;-%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;DENY&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;every_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- info级别日志文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;app_info&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log-path&#125;/info/info.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log-path&#125;/info/info-%d&#123;yyyy-MM-dd&#125;-%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;DENY&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;every_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- error级别日志文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;app_error&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log-path&#125;/error/error.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log-path&#125;/error/error-%d&#123;yyyy-MM-dd&#125;-%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;every_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--建立一个默认的root的logger，需要在root的level中指定输出的级别， --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;output_log_level&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;app_debug&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;app_info&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;app_error&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要是要理解ThresholdFilter的onMatch&#x2F;onMismatch的三个选项值：ACCEPT&#x2F;DENY&#x2F;NEUTRAL，其实，根据字面意思，也很好理解。<br>重要的是，如果有多个ThresholdFilter，那么Filters是必须的，同时在Filters中，首先要过滤不符合的日志级别，把不需要的首先DENY掉，然后再ACCEPT需要的日志级别，这个次序不能搞颠倒。</p><p>原文地址:<a href="http://hifor.net/posts/20150926-304680b6.html">http://hifor.net/posts/20150926-304680b6.html</a></p>]]></content>
    
    
    <summary type="html">log4j 2的配置(输出日志到WEB项目目录、不同级别日志保存不同文件、日志压缩等)</summary>
    
    
    
    <category term="java" scheme="https://www.hifor.net/categories/java/"/>
    
    
    <category term="java" scheme="https://www.hifor.net/tags/java/"/>
    
    <category term="log4j2" scheme="https://www.hifor.net/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>前端工程与性能优化</title>
    <link href="https://www.hifor.net/posts/20150926-d81822ad.html"/>
    <id>https://www.hifor.net/posts/20150926-d81822ad.html</id>
    <published>2015-09-26T08:36:46.000Z</published>
    <updated>2019-08-23T03:06:24.990Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/article_banner_20150926001.png"><br>每个参与过开发企业级web应用的前端工程师或许都曾思考过前端性能优化方面的问题。我们有雅虎14条性能优化原则，还有两本很经典的性能优化指导书：《高性能网站建设指南》、《高性能网站建设进阶指南》。经验丰富的工程师对于前端性能优化方法耳濡目染，基本都能一一列举出来。这些性能优化原则大概是在7年前提出的，对于web性能优化至今都有非常重要的指导意义。</p><span id="more"></span><p>然而，对于构建大型web应用的团队来说，要坚持贯彻这些优化原则并不是一件十分容易的事。因为优化原则中很多要求是与工程管理相违背的，比如 <code>把css放在头部</code> 和 <code>把js放在尾部</code> 这两条原则，我们不能让团队的工程师在写样式和脚本引用的时候都去修改一个相同的页面文件。这样做会严重影响团队成员间并行开发的效率，尤其是在团队有版本管理的情况下，每天要花大量的时间进行代码修改合并，这项成本是难以接受的。因此在前端工程界，总会看到周期性的性能优化工作，辛勤的前端工程师们每到月圆之夜就会倾巢出动根据优化原则做一次性能优化。</p><blockquote><p>性能优化是一个工程问题</p></blockquote><p>本文将从一个全新的视角来思考web性能优化与前端工程之间的关系，揭示前端性能优化在前端架构及开发工具设计层面的实现思路。</p><h2 id="性能优化原则及分类"><a href="#性能优化原则及分类" class="headerlink" title="性能优化原则及分类"></a>性能优化原则及分类</h2><p>po主先假设本文的读者是有前端开发经验的工程师，并对企业级web应用开发及性能优化有一定的思考，因此我不会重复介绍雅虎14条性能优化原则。如果您没有这些前续知识，请移步 <a href="http://developer.yahoo.com/performance/rules.html">这里</a> 来学习。</p><p>首先，我们把雅虎14条优化原则，《高性能网站建设指南》以及《高性能网站建设进阶指南》中提到的优化点做一次梳理，按照优化方向分类，可以得到这样一张表格：</p><table><thead><tr><th>优化方向</th><th>优化手段</th></tr></thead><tbody><tr><td>请求数量</td><td>合并脚本和样式表，CSS Sprites，拆分初始化负载，划分主域</td></tr><tr><td>请求带宽</td><td>开启GZip，精简JavaScript，移除重复脚本，图像优化</td></tr><tr><td>缓存利用</td><td>使用CDN，使用外部JavaScript和CSS，添加Expires头，<br>减少DNS查找，配置ETag，使AjaX可缓存</td></tr><tr><td>页面结构</td><td>将样式表放在顶部，将脚本放在底部，尽早刷新文档的输出</td></tr><tr><td>代码校验</td><td>避免CSS表达式，避免重定向</td></tr></tbody></table><p>目前大多数前端团队可以利用 <a href="http://yui.github.io/yuicompressor/">yui compressor</a> 或者 <a href="https://code.google.com/p/closure-compiler/">google closure compiler</a> 等压缩工具很容易做到 <code>精简Javascript</code> 这条原则；同样的，也可以使用图片压缩工具对图像进行压缩，实现 <code>图像优化</code> 原则。这两条原则是对单个资源的处理，因此不会引起任何工程方面的问题。很多团队也通过引入代码校验流程来确保实现 <code>避免css表达式</code> 和 <code>避免重定向</code> 原则。目前绝大多数互联网公司也已经开启了服务端的Gzip压缩，并使用CDN实现静态资源的缓存和快速访问；一些技术实力雄厚的前端团队甚至研发出了自动CSS Sprites工具，解决了CSS Sprites在工程维护方面的难题。使用“查找-替换”思路，我们似乎也可以很好的实现 <code>划分主域</code> 原则。</p><p>我们把以上这些已经成熟应用到实际生产中的优化手段去除掉，留下那些还没有很好实现的优化原则。再来回顾一下之前的性能优化分类：</p><table><thead><tr><th>优化方向</th><th>优化手段</th></tr></thead><tbody><tr><td>请求数量</td><td>合并脚本和样式表，拆分初始化负载</td></tr><tr><td>请求带宽</td><td>移除重复脚本</td></tr><tr><td>缓存利用</td><td>添加Expires头，配置ETag，使Ajax可缓存</td></tr><tr><td>页面结构</td><td>将样式表放在顶部，将脚本放在底部，尽早刷新文档的输出</td></tr></tbody></table><p>有很多顶尖的前端团队可以将上述还剩下的优化原则也都一一解决，但业界大多数团队都还没能很好的解决这些问题。因此，本文将就这些原则的解决方案做进一步的分析与讲解，从而为那些还没有进入前端工业化开发的团队提供一些基础技术建设意见，也借此机会与业界顶尖的前端团队在工业化工程化方向上交流一下彼此的心得。</p><h2 id="静态资源版本更新与缓存"><a href="#静态资源版本更新与缓存" class="headerlink" title="静态资源版本更新与缓存"></a>静态资源版本更新与缓存</h2><p><code>缓存利用</code> 分类中保留了 <code>添加Expires头</code> 和 <code>配置ETag</code> 两项。或许有些人会质疑，明明这两项只要配置了服务器的相关选项就可以实现，为什么说它们难以解决呢？确实，开启这两项很容易，但开启了缓存后，我们的项目就开始面临另一个挑战： <code>如何更新这些缓存？</code></p><p>相信大多数团队也找到了类似的答案，它和《高性能网站建设指南》关于“添加Expires头”所说的原则一样——修订文件名。即：</p><blockquote><p>最有效的解决方案是修改其所有链接，这样，全新的请求将从原始服务器下载最新的内容。</p></blockquote><p>思路没错，但要怎么改变链接呢？变成什么样的链接才能有效更新缓存，又能最大限度避免那些没有修改过的文件缓存不失效呢？</p><p>先来看看现在一般前端团队的做法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.js?t=201404231123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;b.js?t=201404231123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;c.js?t=201404231123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;d.js?t=201404231123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;e.js?t=201404231123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>ps: 也有团队采用构建版本号为静态资源请求添加query，它们在本质上是没有区别的，在此就不赘述了。</p></blockquote><p>接下来，项目升级，比如页面上的html结构发生变化，对应还要修改 <code>a.js</code> 这个文件，得到的构建结果如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.js?t=201404231826&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;b.js?t=201404231826&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;c.js?t=201404231826&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;d.js?t=201404231826&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;e.js?t=201404231826&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了触发用户浏览器的缓存更新，我们需要更改静态资源的url地址，如果采用构建信息（时间戳、版本号等）作为url修改的依据，如上述代码所示，我们只修改了一个a.js文件，但再次构建会让所有请求都更改了url地址，用户再度访问页面那些没有修改过的静态资源的(b.js，b.js，c.js，d.js，e.js)的浏览器缓存也一同失效了。</p><blockquote><p>使用构建信息作为静态资源更新标记会导致每次构建发布后所有静态资源都被迫更新，浏览器缓存利用率降低，给性能带来伤害。</p></blockquote><p>此外，采用添加query的方式来清除缓存还有一个弊端，就是 <code>覆盖式发布</code> 的上线问题。</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/deploy.png" alt="覆盖式发布"></p><p>采用query更新缓存的方式实际上要覆盖线上文件的，index.html和a.js总有一个先后的顺序，从而中间出现一段或大或小的时间间隔。尤其是当页面是后端渲染的模板的时候，静态资源和模板是部署在不同的机器集群上的，上线的过程中，静态资源和页面文件的部署时间间隔可能会非常长，对于一个大型互联网应用来说即使在一个很小的时间间隔内，都有可能出现新用户访问。在这个时间间隔中，访问了网站的用户会发生什么情况呢？</p><ol><li>如果先覆盖index.html，后覆盖a.js，用户在这个时间间隙访问，会得到新的index.html配合旧的a.js的情况，从而出现错误的页面。</li><li>如果先覆盖a.js，后覆盖index.html，用户在这个间隙访问，会得到旧的index.html配合新的a.js的情况，从而也出现了错误的页面。</li></ol><p>这就是为什么大型web应用在版本上线的过程中经常会较集中的出现前端报错日志的原因，也是一些互联网公司选择加班到半夜等待访问低峰期再上线的原因之一。</p><p>对于静态资源缓存更新的问题，目前来说最优方案就是 <code>基于文件内容的hash版本冗余机制</code> 了。也就是说，我们希望项目源码是这么写的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发布后代码变成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a_8244e91.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也就是a.js发布出来后被修改了文件名，产生一个新文件，并不是覆盖已有文件。其中”_82244e91”这串字符是根据a.js的文件内容进行hash运算得到的，只有文件内容发生变化了才会有更改。由于将文件发布为带有hash的新文件，而不是同名文件覆盖，因此不会出现上述说的那些问题。同时，这么做还有其他的好处：</p><ol><li>上线的a.js不是同名文件覆盖，而是文件名+hash的冗余，所以可以先上线静态资源，再上线html页面，不存在间隙问题；</li><li>遇到问题回滚版本的时候，无需回滚a.js，只须回滚页面即可；</li><li>由于静态资源版本号是文件内容的hash，因此所有静态资源可以开启永久强缓存，只有更新了内容的文件才会缓存失效，缓存利用率大增；</li></ol><blockquote><p>以文件内容的hash值为依据生产新文件的非覆盖式发布策略是解决静态资源缓存更新最有效的手段。</p></blockquote><p>虽然这种方案是相比之下最完美的解决方案，但它无法通过手工的形式来维护，因为要依靠手工的形式来计算和替换hash值，并生成相应的文件，将是一项非常繁琐且容易出错的工作，因此我们需要借助工具来处理。</p><p>用grunt来实现md5功能是非常困难的，因为grunt只是一个task管理器，而md5计算需要构建工具具有递归编译的能，而不是简单的任务调度。考虑这样的例子：</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/md5.png" alt="md5计算过程"></p><p>由于我们的资源版本号是通过对文件内容进行hash运算得到，如上图所示，index.html中引用的a.css文件的内容其实也包含了a.png的hash运算结果，因此我们在修改index.html中a.css的引用时，不能直接计算a.css的内容hash，而是要先计算出a.png的内容hash，替换a.css中的引用，得到了a.css的最终内容，再做hash运算，最后替换index.html中的引用。</p><blockquote><p>计算index.html中引用的a.css文件的url过程：</p><ol><li>压缩a.png后计算其内容的md5值</li><li>将a.png的md5写入a.css，再压缩a.css，计算其内容的md5值</li><li>将a.css的md5值写入到index.html中</li></ol></blockquote><p>grunt等task-based的工具是很难在task之间协作处理这样的需求的。</p><p>在解决了基于内容hash的版本更新问题之后，我们可以将所有前端静态资源开启永久强缓存，每次版本发布都可以首先让静态资源全量上线，再进一步上线模板或者页面文件，再也不用担心各种缓存和时间间隙的问题了！</p><h2 id="静态资源管理与模块化框架"><a href="#静态资源管理与模块化框架" class="headerlink" title="静态资源管理与模块化框架"></a>静态资源管理与模块化框架</h2><p>解决了静态资源缓存问题之后，让我们再来看看前面的优化原则表还剩些什么：</p><table><thead><tr><th>优化方向</th><th>优化手段</th></tr></thead><tbody><tr><td>请求数量</td><td>合并脚本和样式表，拆分初始化负载</td></tr><tr><td>请求带宽</td><td>移除重复脚本</td></tr><tr><td>缓存利用</td><td>使Ajax可缓存</td></tr><tr><td>页面结构</td><td>将样式表放在顶部，将脚本放在底部，尽早刷新文档的输出</td></tr></tbody></table><p>很不幸，剩下的优化原则都不是使用工具就能很好实现的。或许有人会辩驳：“我用某某工具可以实现脚本和样式表合并”。嗯，必须承认，使用工具进行资源合并并替换引用或许是一个不错的办法，但在大型web应用，这种方式有一些非常严重的缺陷，来看一个很熟悉的例子 ：</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/day0.png" alt="第一天"></p><p>某个web产品页面有A、B、C三个资源</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/day1.png" alt="第二天"></p><p>工程师根据“减少HTTP请求”的优化原则合并了资源</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/day2.png" alt="第三天"></p><p>产品经理要求C模块按需出现，此时C资源已出现多余的可能</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/day3.png" alt="第四天"></p><p>C模块不再需要了，注释掉吧！代码1秒钟搞定，但C资源通常不敢轻易剔除</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/day4.png?v" alt="后来"></p><p>不知不觉中，性能优化变成了性能恶化……</p><blockquote><p>这个例子来自 <a href="http://velocity.oreilly.com.cn/2010/index.php?func=session&name=%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E8%B5%84%E6%BA%90%E7%9A%84%E7%AE%A1%E7%90%86%E5%92%8C%E4%BC%98%E5%8C%96">Facebook静态网页资源的管理和优化@Velocity China 2010</a></p></blockquote><p>事实上，使用工具在线下进行静态资源合并是无法解决资源按需加载的问题的。如果解决不了按需加载，则必会导致资源的冗余；此外，线下通过工具实现的资源合并通常会使得资源加载和使用的分离，比如在页面头部或配置文件中写资源引用及合并信息，而用到这些资源的html组件写在了页面其他地方，这种书写方式在工程上非常容易引起维护不同步的问题，导致使用资源的代码删除了，引用资源的代码却还在的情况。因此，在工业上要实现资源合并至少要满足如下需求：</p><ol><li>确实能减少HTTP请求，这是基本要求（合并）</li><li>在使用资源的地方引用资源（就近依赖），不使用不加载（按需）</li><li>虽然资源引用不是集中书写的，但资源引用的代码最终还能出现在页面头部（css）或尾部（js）</li><li>能够避免重复加载资源（去重）</li></ol><p>将以上要求综合考虑，不难发现，单纯依靠前端技术或者工具处理是很难达到这些理想要求的。</p><p>接下来我会讲述一种新的模板架构设计，用以实现前面说到那些性能优化原则，同时满足工程开发和维护的需要，这种架构设计的核心思想就是：</p><blockquote><p>基于依赖关系表的静态资源管理系统与模块化框架设计</p></blockquote><p>考虑一段这样的页面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;a.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;b.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;c.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据资源合并需求中的第二项，我们希望资源引用与使用能尽量靠近，这样将来维护起来会更容易一些，因此，理想的源码是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;a.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;b.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;c.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当然，把这样的页面直接送达给浏览器用户是会有严重的页面闪烁问题的，所以我们实际上仍然希望最终页面输出的结果还是如最开始的截图一样，将css放在头部输出。这就意味着，页面结构需要有一些调整，并且有能力收集资源加载需求，那么我们考虑一下这样的源码（以php为例）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;page&lt;/title&gt;</span><br><span class="line">    &lt;!--[ CSS LINKS PLACEHOLDER ]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;a.css&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;div&gt; content of module a &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;b.css&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;div&gt; content of module b &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;c.css&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;div&gt; content of module c &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在页面的头部插入一个html注释 <code>&lt;!--[CSS LINKS PLACEHOLDER]--&gt;</code> 作为占位，而将原来字面书写的资源引用改成模板接口 <code>require_static</code> 调用，该接口负责收集页面所需资源。</p><p>require_static接口实现非常简单，就是准备一个数组，收集资源引用，并且可以去重。最后在页面输出的前一刻，我们将require_static在运行时收集到的 <code>a.css</code>、<code>b.css</code>、<code>c.css</code> 三个资源拼接成html标签，替换掉注释占位 <code>&lt;!--[CSS LINKS PLACEHOLDER]--&gt;</code>，从而得到我们需要的页面结构。</p><p>经过实践总结，可以发现模板层面只要实现三个开发接口，就可以比较完美的实现目前遗留的大部分性能优化原则，这三个接口分别是：</p><ol><li>require_static(res_id)：收集资源加载需求的接口，参数是静态资源id。</li><li>load_widget(wiget_id)：加载拆分成小组件模板的接口。你可以叫它为widget、component或者pagelet之类的。总之，我们需要一个接口把一个大的页面模板拆分成一个个的小部分来维护，最后在原来的页面中以组件为单位来加载这些小部件。</li><li>script(code)：收集写在模板中的js脚本，使之出现的页面底部，从而实现性能优化原则中的 <code>将js放在页面底部</code> 原则。</li></ol><p>实现了这些接口之后，一个重构后的模板页面的源代码可能看起来就是这样的了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;page&lt;/title&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;jquery.js&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;bootstrap.css&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;bootstrap.js&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;!--[ CSS LINKS PLACEHOLDER ]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;a&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;b&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;c&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;!--[ SCRIPTS PLACEHOLDER ]--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>而最终在模板解析的过程中，资源收集与去重、页面script收集、占位符替换操作，最终从服务端发送出来的html代码为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;bootstrap.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;a.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;b.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;c.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;bootstrap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;b.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;c.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不难看出，我们目前已经实现了 <code>按需加载</code>，<code>将脚本放在底部</code>，<code>将样式表放在头部</code> 三项优化原则。</p><p>前面讲到静态资源在上线后需要添加hash戳作为版本标识，那么这种使用模板语言来收集的静态资源该如何实现这项功能呢？</p><blockquote><p>答案是：静态资源依赖关系表。</p></blockquote><p>考虑这样的目录结构：</p><pre><code>project    ├── widget    │   ├── a    │   │   ├── a.css    │   │   ├── a.js    │   │   └── a.php    │   ├── b    │   │   ├── b.css    │   │   ├── b.js    │   │   └── b.php    │   └── c    │       ├── c.css    │       ├── c.js    │       └── c.php    ├── bootstrap.css    ├── bootstrap.js    ├── index.php    └── jquery.js</code></pre><p>如果我们可以使用工具扫描整个project目录，然后创建一张资源表，同时记录每个资源的部署路径，得到这样的一张表：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;res&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;widget/a/a.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/a/a_1688c82.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/a/a.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/a/a_ac3123s.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/b/b.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/b/b_52923ed.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/b/b.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/b/b_a5cd123.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/c/c.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/c/c_03cab13.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/c/c.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/c/c_bf0ae3f.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;jquery.js&quot;</span>      <span class="punctuation">:</span> <span class="string">&quot;/jquery_9151577.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bootstrap.css&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/bootstrap_f5ba12d.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bootstrap.js&quot;</span>   <span class="punctuation">:</span> <span class="string">&quot;/bootstrap_a0b3ef9.js&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pkg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>基于这张表，我们就很容易实现 <code>require_static(file_id)</code>，<code>load_widget(widget_id)</code> 这两个模板接口了。以load_widget为例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_widget</span>(<span class="params"><span class="variable">$id</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//从json文件中读取资源表</span></span><br><span class="line">    <span class="variable">$map</span> = <span class="title function_ invoke__">load_map</span>();</span><br><span class="line">    <span class="comment">//查找静态资源</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;widget/&#x27;</span> . <span class="variable">$id</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$id</span>;</span><br><span class="line">    <span class="comment">//查找js文件</span></span><br><span class="line">    <span class="variable">$js</span> = <span class="variable">$filename</span> . <span class="string">&#x27;.js&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$map</span>[<span class="string">&#x27;res&#x27;</span>][<span class="variable">$js</span>])) &#123;</span><br><span class="line">        <span class="comment">//如果有对应的js资源，就收集起来</span></span><br><span class="line">        <span class="title function_ invoke__">collect_js_static</span>(<span class="variable">$map</span>[<span class="string">&#x27;res&#x27;</span>][<span class="variable">$js</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查找css文件</span></span><br><span class="line">    <span class="variable">$css</span> = <span class="variable">$filename</span> . <span class="string">&#x27;.css&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$map</span>[<span class="string">&#x27;res&#x27;</span>][<span class="variable">$css</span>])) &#123;</span><br><span class="line">        <span class="comment">//如果有对应的css资源，就收集起来</span></span><br><span class="line">        <span class="title function_ invoke__">collect_css_static</span>(<span class="variable">$map</span>[<span class="string">&#x27;res&#x27;</span>][<span class="variable">$css</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$filename</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用查表来解决md5戳的问题，这样，我们的页面最终送达给用户的结果就是这样的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/bootstrap_f5ba12d.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/widget/a/a_1688c82.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/widget/b/b_52923ed.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/widget/c/c_03cab13.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/jquery_9151577.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/bootstrap_a0b3ef9.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/widget/a/a_ac3123s.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/widget/b/b_a5cd123.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/widget/c/c_bf0ae3f.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来，我们讨论基于表的设计思想上是如何实现静态资源合并的。或许有些团队使用过combo服务，也就是我们在最终拼接生成页面资源引用的时候，并不是生成多个独立的link标签，而是将资源地址拼接成一个url路径，请求一种线上的动态资源合并服务，从而实现减少HTTP请求的需求，比如前面的例子，稍作调整即可得到这样的结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/??bootstrap_f5ba12d.css,widget/a/a_1688c82.css,widget/b/b_52923ed.css,widget/c/c_03cab13.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/??jquery_9151577.js,bootstrap_a0b3ef9.js,widget/a/a_ac3123s.js,widget/b/b_a5cd123.js,widget/c/c_bf0ae3f.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个 <code>/??file1,file2,file3,…</code> 的url请求响应就是动态combo服务提供的，它的原理很简单，就是根据url找到对应的多个文件，合并成一个文件来响应请求，并将其缓存，以加快访问速度。</p><p>这种方法很巧妙，有些服务器甚至直接集成了这类模块来方便的开启此项服务，这种做法也是大多数大型web应用的资源合并做法。但它也存在一些缺陷：</p><ol><li>浏览器有url长度限制，因此不能无限制的合并资源。</li><li>如果用户在网站内有公共资源的两个页面间跳转访问，由于两个页面的combo的url不一样导致用户不能利用浏览器缓存来加快对公共资源的访问速度。</li><li>如果combo的url中任何一个文件发生改变，都会导致整个url缓存失效，从而导致浏览器缓存利用率降低。</li></ol><p>对于上述第二条缺陷，可以举个例子来看说明：</p><ul><li>假设网站有两个页面A和B</li><li>A页面使用了a，b，c，d四个资源</li><li>B页面使用了a，b，e，f四个资源</li><li>如果使用combo服务，我们会得：<ul><li>A页面的资源引用为：&#x2F;??<code>a,b,c,d</code></li><li>B页面的资源引用为：&#x2F;??<code>a,b,e,f</code></li></ul></li><li>两个页面引用的资源是不同的url，因此浏览器会请求两个合并后的资源文件，跨页面访问没能很好的利用a、b这两个资源的缓存。</li></ul><p>很明显，如果combo服务能聪明的知道A页面使用的资源引用为 &#x2F;??<code>a,b</code> 和 &#x2F;??<code>c,d</code>，而B页面使用的资源引用为 &#x2F;??<code>a,b</code> 和 &#x2F;??<code>e,f</code>就好了。这样当用户在访问A页面之后再访问B页面时，只需要下载B页面的第二个combo文件即可，第一个文件已经在访问A页面时缓存好了的。</p><p>基于这样的思考，我们在资源表上新增了一个字段，取名为 <code>pkg</code>，就是资源合并生成的新资源，表的结构会变成：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;res&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;widget/a/a.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/a/a_1688c82.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/a/a.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/a/a_ac3123s.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/b/b.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/b/b_52923ed.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/b/b.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/b/b_a5cd123.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/c/c.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/widget/c/c_03cab13.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widget/c/c.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/widget/c/c_bf0ae3f.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;jquery.js&quot;</span>      <span class="punctuation">:</span> <span class="string">&quot;/jquery_9151577.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bootstrap.css&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;/bootstrap_f5ba12d.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bootstrap.js&quot;</span>   <span class="punctuation">:</span> <span class="string">&quot;/bootstrap_a0b3ef9.js&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pkg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;p0&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/pkg/lib_cef213d.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;has&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;jquery.js&quot;</span><span class="punctuation">,</span> <span class="string">&quot;bootstrap.js&quot;</span> <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;p1&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/pkg/lib_afec33f.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;has&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;bootstrap.css&quot;</span> <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;p2&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/pkg/widgets_22feac1.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;has&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;widget/a/a.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;widget/b/b.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;widget/c/c.js&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;p3&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;/pkg/widgets_af23ce5.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;has&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;widget/a/a.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;widget/b/b.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;widget/c/c.css&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>相比之前的表，可以看到新表中多了一个pkg字段，并且记录了打包后的文件所包含的独立资源。这样，我们重新设计一下 require_static、load_widget 这两个模板接口，实现这样的逻辑：</p><blockquote><p>在查表的时候，如果一个静态资源有pkg字段，那么就去加载pkg字段所指向的打包文件，否则加载资源本身。</p></blockquote><p>比如执行<code>require_static(&#39;bootstrap.js&#39;)</code>，查表得知bootstrap.js被打包在了<code>p1</code>中，因此取出p1包的url <code>/pkg/lib_cef213d.js</code>，并且记录页面已加载了 <code>jquery.js</code> 和  <code>bootstrap.js</code> 两个资源。这样一来，之前的模板代码执行之后得到的html就变成了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/pkg/lib_afec33f.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/pkg/widgets_af23ce5.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/pkg/lib_cef213d.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/pkg/widgets_22feac1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>虽然这种策略请求有4个，不如combo形式的请求少，但可能在统计上是性能更好的方案。由于两个lib打包的文件修改的可能性很小，因此这两个请求的缓存利用率会非常高，每次项目发布后，用户需要重新下载的静态资源可能要比combo请求节省很多带宽。</p><blockquote><p>性能优化既是一个工程问题，又是一个统计问题。优化性能时如果只关注一个页面的首次加载是很片面的。还应该考虑全站页面间跳转、项目迭代后更新资源等情况下的优化策略。</p></blockquote><p>此时，我们又引入了一个新的问题：如何决定哪些文件被打包？</p><p>从经验来看，项目初期可以采用人工配置的方式来指定打包情况，比如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pack&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;lib.js&quot;</span>      <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;jquery.js&quot;</span><span class="punctuation">,</span> <span class="string">&quot;bootstrap.js&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lib.css&quot;</span>     <span class="punctuation">:</span> <span class="string">&quot;bootstrap.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widgets.js&quot;</span>  <span class="punctuation">:</span> <span class="string">&quot;widget/**.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;widgets.css&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;widget/**.css&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>但随着系统规模的增大，人工配置会带来非常高的维护成本，此时需要一个辅助系统，通过分析线上访问日志和静态资源组合加载情况来自动生成这份配置文件，系统设计如图：</p><p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/log.png" alt="静态资源分析系统"></p><p>至此，我们通过基于表的静态资源管理系统和三个模板接口实现了几个重要的性能优化原则，现在我们再来回顾一下前面的性能优化原则分类表，剔除掉已经做到了的，看看还剩下哪些没做到的：</p><table><thead><tr><th>优化方向</th><th>优化手段</th></tr></thead><tbody><tr><td>请求数量</td><td>拆分初始化负载</td></tr><tr><td>缓存利用</td><td>使Ajax可缓存</td></tr><tr><td>页面结构</td><td>尽早刷新文档的输出</td></tr></tbody></table><p><code>拆分初始化负载</code> 的目标是将页面一开始加载时不需要执行的资源从所有资源中分离出来，等到需要的时候再加载。工程师通常没有耐心去区分资源的分类情况，但我们可以利用组件化框架接口来帮助工程师管理资源的使用。还是从例子开始思考，如果我们有一个js文件是用户交互后才需要加载的，会怎样呢：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;page&lt;/title&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;jquery.js&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;bootstrap.css&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">require_static</span>(<span class="string">&#x27;bootstrap.js&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;!--[ CSS LINKS PLACEHOLDER ]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;a&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;b&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">load_widget</span>(<span class="string">&#x27;c&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">script</span>(<span class="string">&#x27;start&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(document.body).<span class="title function_ invoke__">click</span>(function()&#123;</span><br><span class="line">            <span class="keyword">require</span>.<span class="title function_ invoke__">async</span>(<span class="string">&#x27;dialog.js&#x27;</span>, function(dialog)&#123;</span><br><span class="line">                dialog.<span class="title function_ invoke__">show</span>(<span class="string">&#x27;you catch me!&#x27;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="title function_ invoke__">script</span>(<span class="string">&#x27;end&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    &lt;!--[ SCRIPTS PLACEHOLDER ]--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>很明显，<code>dialog.js</code> 这个文件我们不需要在初始化的时候就加载，因此它应该在后续的交互中再加载，但文件都加了md5戳，我们如何能在浏览器环境中知道加载的url呢？</p><blockquote><p>答案就是：把静态资源表的一部分输出在页面上，供前端模块化框架加载静态资源。</p></blockquote><p>我就不多解释代码的执行过程了，大家看到完整的html输出就能理解是怎么回事了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/pkg/lib_afec33f.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/pkg/widgets_af23ce5.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module a <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> content of module c <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/pkg/lib_cef213d.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/pkg/widgets_22feac1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//将静态资源表输出在前端页面中</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            res : &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;dialog.js&#x27;</span> : <span class="string">&#x27;/dialog_fa3df03.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">document</span>.<span class="property">body</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//require.async接口查表确定加载资源的url</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">require</span>.<span class="title function_">async</span>(<span class="string">&#x27;dialog.js&#x27;</span>, <span class="keyword">function</span>(<span class="params">dialog</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                dialog.<span class="title function_">show</span>(<span class="string">&#x27;you catch me!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>dialog.js不会在页面以script src的形式输出，而是变成了资源注册，这样，当页面点击触发require.async执行的时候，async函数才会查表找到资源的url并加载它，加载完毕后触发回调函数。</p><blockquote><p>以上框架示例我实现了一个java版（ <a href="https://github.com/fouber/fis-java-jsp">https://github.com/fouber/fis-java-jsp</a> ）和一个php版（ <a href="https://github.com/fouber/static-resource-management-system-demo">https://github.com/fouber/static-resource-management-system-demo</a> ）的示例项目，有兴趣的同学可以参考一下，比阅读文章要更直观一些。</p></blockquote><p>到目前为止，我们又以架构的形式实现了一项优化原则（拆分初始化负载），回顾我们的优化分类表，现在仅有两项没能做到了：</p><table><thead><tr><th>优化方向</th><th>优化手段</th></tr></thead><tbody><tr><td>缓存利用</td><td>使Ajax可缓存</td></tr><tr><td>页面结构</td><td>尽早刷新文档的输出</td></tr></tbody></table><p>剩下的两项优化原则要做到并不容易，真正可缓存的Ajax在现实开发中比较少见，而 <code>尽早刷新文档的输出</code> 原则facebook在2010年的velocity上 <a href="http://velocity.oreilly.com.cn/2010/index.php?func=session&name=Facebook%E7%BD%91%E7%AB%99%E7%9A%84Ajax%E5%8C%96%E3%80%81%E7%BC%93%E5%AD%98%E5%92%8C%E6%B5%81%E6%B0%B4%E7%BA%BF">提到过</a>，就是BigPipe技术。当时facebook团队还讲到了Quickling和PageCache两项技术，其中的PageCache算是比较彻底的实现Ajax可缓存的优化原则了。由于篇幅关系，就不在此展开了，后续还会撰文详细解读这两项技术。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实在前端开发工程管理领域还有很多细节值得探索和挖掘，提升前端团队生产力水平并不是一句空话，它需要我们能对前端开发及代码运行有更深刻的认识，对性能优化原则有更细致的分析与研究。在前端工业化开发的所有环节均有可节省的人力成本，这些成本非常可观，相信现在很多大型互联网公司也都有了这样的共识。</p><p>本文只是将这个领域中很小的一部分知识的展开讨论，抛砖引玉，希望能为业界相关领域的工作者提供一些不一样的思路。</p><p>原文地址:<a href="https://github.com/fouber/blog/issues/3">https://github.com/fouber/blog/issues/3</a></p>]]></content>
    
    
    <summary type="html">前端工程与性能优化</summary>
    
    
    
    <category term="前端" scheme="https://www.hifor.net/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://www.hifor.net/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="性能" scheme="https://www.hifor.net/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>零基础免费搭建个人博客-hexo+github</title>
    <link href="https://www.hifor.net/posts/20150701-2309139e.html"/>
    <id>https://www.hifor.net/posts/20150701-2309139e.html</id>
    <published>2015-07-01T08:36:46.000Z</published>
    <updated>2019-08-23T03:06:15.938Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/hexo20150701000.png"><br>使用hexo生成静态博客并架设在免费的github page平台</p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>系统:</p><ul><li>Window 7 64位</li></ul><p>使用软件:</p><ul><li>Git v1.9.5<br>[下载地址] <a href="http://pan.baidu.com/s/1c0rroje">百度云</a> <a href="http://yunpan.cn/cQbXP6aytfC4w">360云盘 访问密码 d269</a> <a href="http://git-scm.com/download/">Git官网</a></li><li>Node.js v0.12.5 x64<br>[下载地址] <a href="http://pan.baidu.com/s/1o6opb9g">百度云</a> <a href="http://yunpan.cn/cQbGMDsq7DruS">360云盘 访问密码 608f</a> <a href="https://nodejs.org/download/">node.js官网</a><br>32位或64位按自己电脑的系统来选择，如果不清楚，可以直接在官网下载32位的，可以兼容64位系统</li></ul><p>备注:<br>不同软件版本的安装与使用会有差异，请尽量与本教程保持一致</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><ul><li>大部分按默认安装，一路点击”Next”<br><img src="/image/hexo20150701001.png"></li><li>这里选择对应的windows选项，如下图<br><img src="/image/hexo20150701006.png"><br><img src="/image/hexo20150701007.png"></li><li>等待安装完成<br><img src="/image/hexo20150701008.png"></li></ul><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><ul><li>Node安装更加简单，还是一路”Next”,最后等待安装完成即可<br><img src="/image/hexo20150701010.png"><br><img src="/image/hexo20150701015.png"></li></ul><h2 id="验证软件正确安装"><a href="#验证软件正确安装" class="headerlink" title="验证软件正确安装"></a>验证软件正确安装</h2><ul><li>同时按下Win键和R键（或者点击“开始菜单”-&gt;点击“运行”）,打开运行窗口,输入“cmd”<br>然后输入以下命令，结果与下图相同则说明安装正确，若不正确可以卸载软件重新安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701016.png"></li></ul><h2 id="申请GitHub"><a href="#申请GitHub" class="headerlink" title="申请GitHub"></a>申请GitHub</h2><ul><li>点击-&gt;<a href="https://github.com/">GitHub</a>进入官网注册帐号</li><li>按下图分别输入用户名、邮箱、密码，然后点击注册<br><img src="/image/hexo20150701017.png"></li><li>按默认点击“Finish sign up”<br><img src="/image/hexo20150701018.png"></li><li>点击”New repository”，新建一个版本库<br><img src="/image/hexo20150701019.png"></li><li>输入Repository name:yourname.github.io(yourname与你的注册用户名一致,这个就是你博客的域名了)<br><img src="/image/hexo20150701020.png"><br>到此github帐号申请完成<br><img src="/image/hexo20150701021.png"></li><li>启用GitHub Page<br>点击右边的“Setting”菜单进入设置,点击”Launch automatic page generator”<br><img src="/image/hexo20150701021-1.png"><br>点击底部的”Continue to layouts”<br><img src="/image/hexo20150701021-2.png"><br>最后点击”Publish page”,发布github默认生成的一个静态站点<br><img src="/image/hexo20150701021-3.png"></li><li>验证邮箱<br>点击个人设置<br><img src="/image/hexo20150701021-4.png"><br>点击”Send verification Email”发送验证邮件<br><img src="/image/hexo20150701021-5.png"><br>进入你的邮箱，查收验证邮件进行验证<br><img src="/image/hexo20150701021-6.png"></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>hexo是基于node.js的静态博客，<a href="https://hexo.io/zh-cn/">官网</a>也是搭建在GitHub上</p><ul><li>在电脑上新建一个blog文件夹,该文件夹用于存放你的博客文件,然后右键单击选择“Git Bash”<br><img src="/image/hexo20150701022.png"></li><li>大家估计都有被“墙”的经历，安装hexo为了避免出现类似情况，我使用<a href="http://npm.taobao.org/">淘宝NPM镜像</a>,输入以下命令等待安装完成<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701023.png"></li><li>使用淘宝NPM安装Hexo<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>与原先的npm完全一样，只是命令改为cnpm,一样等待hexo安装完成<br><img src="/image/hexo20150701024.png"><br>出现的WARN可以不用理会<br>继续输入以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo --save</span><br></pre></td></tr></table></figure>安装完成后，在输入命令，验证是否安装正确<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701025.png"></li></ul><h2 id="本地运行hexo"><a href="#本地运行hexo" class="headerlink" title="本地运行hexo"></a>本地运行hexo</h2><ul><li>初始化hexo<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701026.png"></li><li>安装生成器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701027.png"></li><li>运行hexo,以后要在本地运行博客只要输入该命令即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -g</span><br></pre></td></tr></table></figure><img src="/image/hexo20150701028.png"><br>打开浏览器，输入localhost:4000,就可以在本地看到你的个人博客了<br><img src="/image/hexo20150701029.png"></li><li>停止运行<br>按住Ctrl+C键即可停止</li></ul><h2 id="管理博客"><a href="#管理博客" class="headerlink" title="管理博客"></a>管理博客</h2><ul><li>配置信息<br>使用<a href="http://pan.baidu.com/s/1pJFruER">Sublime_Text</a>编辑器（绿色软件无需安装，解压即可使用）打开blog&#x2F;_config.yml文件，进行配置<br><img src="/image/hexo20150701030.png"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#博客名称</span></span><br><span class="line">title: 我的博客</span><br><span class="line"><span class="comment">#副标题</span></span><br><span class="line">subtitle: 一天进步一点</span><br><span class="line"><span class="comment">#简介</span></span><br><span class="line">description: 记录生活点滴</span><br><span class="line"><span class="comment">#博客作者</span></span><br><span class="line">author: John Doe</span><br><span class="line"><span class="comment">#博客语言</span></span><br><span class="line">language: zh-CN</span><br><span class="line"><span class="comment">#时区</span></span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"><span class="comment">#博客地址,与申请的GitHub一致</span></span><br><span class="line">url: http://elfwalk.github.io</span><br><span class="line">root: /</span><br><span class="line"><span class="comment">#博客链接格式</span></span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">true</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment">#日期格式</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment">#分页，每页文章数量</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment">#博客主题</span></span><br><span class="line">theme: landscape</span><br><span class="line"></span><br><span class="line"><span class="comment">#发布设置</span></span><br><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  <span class="comment">#elfwalk改为你的github用户名</span></span><br><span class="line">  repository: https://github.com/elfwalk/elfwalk.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li>写一篇文章<br>输入创建文章命令，生成一个md文件(&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure><img src="/image/hexo20150701031.png"><br>用编辑器打开hello.md文件,编写完后保存<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title: hello</span><br><span class="line"><span class="built_in">date</span>: 2015-07-01 22:37:23</span><br><span class="line">categories:</span><br><span class="line">  - 日志</span><br><span class="line">  - 二级目录</span><br><span class="line">tags:</span><br><span class="line">  - hello</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要:</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文:</span><br></pre></td></tr></table></figure></li></ul><h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><h3 id="配置SSH-keys"><a href="#配置SSH-keys" class="headerlink" title="配置SSH keys"></a>配置SSH keys</h3><p>我们如何让本地git项目与远程的github建立联系呢？用SSH keys。</p><ul><li><p>生成新的SSH Key：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;邮件地址@youremail.com&quot;</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;直接回车&gt;</span><br></pre></td></tr></table></figure><p>注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；<br>注意2: 此处的「-C」的是大写的「C」<br>然后系统会要你输入密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure><p>在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br>注意：输入密码的时候没有*字样的，你直接输入就可以了。<br>最后看到这样的界面，就成功设置ssh key了：<br><img src="/image/hexo20160127001.png"></p></li><li><p>添加SSH Key到GitHub<br>在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。<br>1、打开本地C:\Documents and Settings\Administrator.ssh\id_rsa.pub文件。此文件里面内容为刚才生成人密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。<br>2、登陆github系统。点击右上角的 Account Settings—&gt;SSH Public keys —&gt; add another public keys<br>3、把你本地生成的密钥复制到里面（key文本框中）， 点击 add key 就ok了</p></li></ul><h3 id="设置git身份信息"><a href="#设置git身份信息" class="headerlink" title="设置git身份信息"></a>设置git身份信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>  <img src="/image/hexo20150701032.png"></p><ul><li><p>安装hexo git插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="/image/hexo20150701033.png"></p></li><li><p>发布更新博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>发布时需要输入github的帐号和密码，输入密码时是看不到自己输入的内容的<br><img src="/image/hexo20150701034.png"><br>发布成功后，访问yourname.github.io看下成果</p></li></ul><h2 id="官方教程"><a href="#官方教程" class="headerlink" title="官方教程"></a>官方教程</h2><p><a href="https://hexo.io/zh-cn/docs/index.html">中文文档</a></p><p>评论插件：</p><ul><li><a href="https://github.com/imsun/gitment">gitment</a> 基于github issue搭建的评论系统。</li></ul><p>原文地址:<a href="http://hifor.net/posts/20150701-2309139e.html">http://hifor.net/posts/20150701-2309139e.html</a></p>]]></content>
    
    
    <summary type="html">使用hexo在github平台免费搭建个人博客</summary>
    
    
    
    <category term="blog" scheme="https://www.hifor.net/categories/blog/"/>
    
    
    <category term="blog" scheme="https://www.hifor.net/tags/blog/"/>
    
    <category term="hexo" scheme="https://www.hifor.net/tags/hexo/"/>
    
    <category term="github" scheme="https://www.hifor.net/tags/github/"/>
    
    <category term="git" scheme="https://www.hifor.net/tags/git/"/>
    
    <category term="node.js" scheme="https://www.hifor.net/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>信息自由</title>
    <link href="https://www.hifor.net/freedom-of-information"/>
    <id>https://www.hifor.net/freedom-of-information</id>
    <published>2015-05-18T02:25:33.000Z</published>
    <updated>2021-12-19T08:44:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/article_banner_20190823001.png"></p><p>世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活。</p><span id="more"></span><h2 id="最新工具"><a href="#最新工具" class="headerlink" title="最新工具"></a>最新工具</h2><h3 id="v2ray"><a href="#v2ray" class="headerlink" title="v2ray"></a>v2ray</h3><ul><li><p>原版： <a href="https://github.com/v2ray/v2ray-core">https://github.com/v2ray/v2ray-core</a></p></li><li><p>window版：  <a href="https://github.com/2dust/v2rayN">https://github.com/2dust/v2rayN</a></p></li></ul><h3 id="clash"><a href="#clash" class="headerlink" title="clash"></a>clash</h3><ul><li>原版： <a href="https://github.com/Dreamacro/clash">https://github.com/Dreamacro/clash</a></li><li>ClashForWindows：<a href="https://github.com/Fndroid/clash_for_windows_pkg">https://github.com/Fndroid/clash_for_windows_pkg</a></li><li>ClashX：<a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a></li><li>ClashForAndroid：<a href="https://github.com/Kr328/ClashForAndroid/releases/">https://github.com/Kr328/ClashForAndroid/releases/</a></li></ul><h3 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h3><blockquote><p>不推荐使用</p></blockquote><ul><li>window版：<a href="https://github.com/shadowsocks/shadowsocks-windows">https://github.com/shadowsocks/shadowsocks-windows</a></li></ul>]]></content>
    
    
    <summary type="html">翻墙,扶墙,科学上网,魔法上网,自由上网,梯子</summary>
    
    
    
    <category term="信息自由" scheme="https://www.hifor.net/categories/%E4%BF%A1%E6%81%AF%E8%87%AA%E7%94%B1/"/>
    
    
    <category term="信息自由" scheme="https://www.hifor.net/tags/%E4%BF%A1%E6%81%AF%E8%87%AA%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-启动/关闭/重启/检测 BAT批处理</title>
    <link href="https://www.hifor.net/nginx-bat"/>
    <id>https://www.hifor.net/nginx-bat</id>
    <published>2014-12-03T08:48:59.000Z</published>
    <updated>2019-08-23T03:04:36.179Z</updated>
    
    <content type="html"><![CDATA[<p>nginx检测配置命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%NGINX_DIR%/nginx.exe -t</span><br></pre></td></tr></table></figure><p>返回结果<br>nginx: the configuration file C:\nginx-1.1.5&#x2F;conf&#x2F;nginx.conf syntax is ok<br>nginx: configuration file C:\nginx-1.1.5&#x2F;conf&#x2F;nginx.conf test is successful</p><p>可以把检测配置文件项放到Nginx操作的bat文件里，方便使用</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">cls</span><br><span class="line">@ECHO OFF</span><br><span class="line">SET NGINX_PATH=C:</span><br><span class="line">SET NGINX_DIR=C:\nginx-1.1.5\</span><br><span class="line">color 0a</span><br><span class="line">TITLE Nginx管理程序</span><br><span class="line">GOTO MENU</span><br><span class="line">:MENU</span><br><span class="line">CLS</span><br><span class="line">ECHO.</span><br><span class="line">ECHO. * * * *  Nginx Management  * * *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. *   1 启动Nginx                  *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. *   2 关闭Nginx                  *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. *   3 重启Nginx                  *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. *   4 检查配置                   *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. *   5 退 出                      *</span><br><span class="line">ECHO. *                                *</span><br><span class="line">ECHO. * * * * * * * * * * * * * * * * *</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.请输入命令编号:</span><br><span class="line"><span class="built_in">set</span> /p ID=</span><br><span class="line">IF <span class="string">&quot;%id%&quot;</span>==<span class="string">&quot;1&quot;</span> GOTO cmd1</span><br><span class="line">IF <span class="string">&quot;%id%&quot;</span>==<span class="string">&quot;2&quot;</span> GOTO cmd2</span><br><span class="line">IF <span class="string">&quot;%id%&quot;</span>==<span class="string">&quot;3&quot;</span> GOTO cmd3</span><br><span class="line">IF <span class="string">&quot;%id%&quot;</span>==<span class="string">&quot;4&quot;</span> GOTO cmd4</span><br><span class="line">IF <span class="string">&quot;%id%&quot;</span>==<span class="string">&quot;5&quot;</span> EXIT</span><br><span class="line">PAUSE</span><br><span class="line"></span><br><span class="line">:cmd1</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.启动Nginx......</span><br><span class="line">IF NOT EXIST %NGINX_DIR%nginx.exe ECHO %NGINX_DIR%nginx.exe不存在</span><br><span class="line">%NGINX_PATH%</span><br><span class="line"><span class="built_in">cd</span> %NGINX_DIR%</span><br><span class="line">IF EXIST %NGINX_DIR% start %NGINX_DIR%nginx.exe</span><br><span class="line">ECHO.OK</span><br><span class="line">PAUSE</span><br><span class="line">GOTO MENU</span><br><span class="line"></span><br><span class="line">:cmd2</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.关闭Nginx......</span><br><span class="line">taskkill /F /IM nginx.exe &gt; nul</span><br><span class="line">ECHO.OK</span><br><span class="line">PAUSE</span><br><span class="line">GOTO MENU</span><br><span class="line"></span><br><span class="line">:cmd3</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.关闭Nginx......</span><br><span class="line">taskkill /F /IM nginx.exe &gt; nul</span><br><span class="line">ECHO.OK</span><br><span class="line">GOTO cmd1</span><br><span class="line">GOTO MENU</span><br><span class="line"></span><br><span class="line">:cmd4</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.检查Nginx配置......</span><br><span class="line">IF NOT EXIST %NGINX_DIR%nginx.exe ECHO %NGINX_DIR%nginx.exe不存在</span><br><span class="line">%NGINX_PATH%</span><br><span class="line"><span class="built_in">cd</span> %NGINX_DIR%</span><br><span class="line">IF EXIST %NGINX_DIR% %NGINX_DIR%nginx.exe -t</span><br><span class="line">ECHO.完成检查</span><br><span class="line">PAUSE</span><br><span class="line">GOTO MENU</span><br></pre></td></tr></table></figure><p>原文地址:<a href="http://hifor.net/posts/20141203-b8c96bb9.html">http://hifor.net/posts/20141203-b8c96bb9.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;nginx检测配置命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;%NGINX_DIR%/nginx.exe -t&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回结果&lt;br&gt;nginx: the configuration file C:&#92;nginx-1.1.5&amp;#x2F;conf&amp;#x2F;nginx.conf syntax is ok&lt;br&gt;nginx: configuration file C:&#92;nginx-1.1.5&amp;#x2F;conf&amp;#x2F;nginx.conf test is successful&lt;/p&gt;
&lt;p&gt;可以把检测配置文件项放到Nginx操作的bat文件里，方便使用&lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="https://www.hifor.net/categories/nginx/"/>
    
    
    <category term="nginx" scheme="https://www.hifor.net/tags/nginx/"/>
    
  </entry>
  
</feed>
